<?xml version="1.0" encoding="utf-8" ?>
<Obfuscator>
	<!--输入路径-->
	<Var name="InPath" value="." />
	<!--输出路径:加密混淆过的路径-->
	<Var name="OutPath" value=".\Obfuscator_Output" />
	<!--混淆代码的参数-->


	<!-- 设置 HideStrings 为 true 可以设置是否将使用的字符串进行二次编码 -->
	<!-- 由于进行二次编码，将会稍微伤一点点性能，二次编码需要在运行的时候，调用 Encoding 进行转换为字符串 -->
	<Var name="HideStrings" value="true" />

	<!-- 使用 KeepPublicApi 配置是否保持公开的 API 不进行混淆签名，如公开的类型公开的方法等等，就不进行混淆签名了 -->
	<!-- 语法的写法就是 name 表示某个开关，而 value 表示值 -->
	<!-- 对于大部分的库来说，设置公开的 API 不进行混淆是符合预期的 -->
	<Var name="KeepPublicApi" value="true" />
	<Var name="HidePrivateApi" value="true" />

	<!-- 设置 UseUnicodeNames 为 true 表示使用不可见的 Unicode 字符代替原有的命名，通过此配置，可以让反编译看到的类和命名空间和成员等内容都是不可见的字符 -->
	<!--<Var name="UseUnicodeNames" value="true" />-->
	<!--是否使用韩文字符作为混淆名称。-->
	<!--<Var name="UseKoreanNames" value="true" />-->
	<Var name="UseUnicodeNames" value="true" />
	<!-- 配置是否需要重命名字段，默认配置了 HidePrivateApi 为 true 将都会打开重命名字段，因此这个配置的存在只是用来配置为 false 表示不要重命名字段 -->
	<Var name="RenameFields" value="true" />

	<Var name="RenameProperties" value="true" />
	
	<!-- 是否复用命名，设置为 true 的时候，将会复用命名，如在不同的类型里面，对字段进行混淆，那么不同的类型的字段可以是重名的 -->
	<!-- 设置为 false 的时候，全局将不会有重复的命名 -->
	<Var name="ReuseNames" value="true" />
	
	<Var name="OptimizeMethods" value="true" />
	<Var name="SuppressIldasm" value="false" />
	

	<!--要混淆的模块-->

	<Module file="$(InPath)\TgMu.Api.dll" />
</Obfuscator>